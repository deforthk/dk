'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var jsonp = _interopDefault(require('jsonp'));

var VueGistCore = { render: function () {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', [_c('p', { domProps: { "innerHTML": _vm._s(_vm.gistDiv) } })]);
  }, staticRenderFns: [], _scopeId: 'data-v-8cf532b0',
  props: {
    gistDiv: {
      type: String,
      required: true
    }
  }
};

var VueGist = { render: function () {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', [_vm.gistErr ? [_c('img', { attrs: { "id": "notFound", "height": "100%", "width": "100%", "src": "https://user-images.githubusercontent.com/883233/102043641-d4817580-3d89-11eb-885d-2786373932d4.png", "alt": "404" } })] : [_c('app-gist-core', { attrs: { "gist-div": _vm.gistData } })]], 2);
  }, staticRenderFns: [], _scopeId: 'data-v-aefc6a2e',
  components: {
    appGistCore: VueGistCore
  },
  props: {
    gistId: {
      type: String,
      required: true
    },
    file: {
      type: String,
      required: false,
      default: ""
    }
  },
  data: function data() {
    return {
      gistData: "loading...",
      gistUrl: "https://gist.github.com/",
      gistErr: false
    };
  },
  computed: {
    url: function url() {
      return ("" + (this.gistUrl) + (this.gistId) + ".json");
    },
    params: function params() {
      if (this.file.length > 0) {
        return ("file=" + (this.file));
      }
      return "";
    },
    fullUrl: function fullUrl() {
      return ((this.url) + "?" + (this.params));
    }
  },
  watch: {
    gistId: {
      handler: function () {
        this.$data.gistErr = false;
        this.$data.gistData = "loading...";
        this.getGistData();
      },
      immediate: true,
      deep: true
    }
  },
  methods: {
    getGistData: function getGistData() {
      var this$1 = this;

      jsonp(this.fullUrl, { timeout: 20000 }, function (err, response) {
        if (err) {
          this$1.$data.gistErr = true;
          return;
        }
        this$1.gistData = response.div;
      });
    }
  }
};

var index = {
  name: 'vue-embed-gist',
  props: {
    gistId: {
      type: String,
      required: true
    },
    file: {
      type: String,
      required: false
    }
  },
  render: function render(h) {
    return h(VueGist, {
      props: {
        gistId: this.gistId,
        file: this.file
      }
    });
  }
};

module.exports = index;
