{"remainingRequest":"E:\\workspace\\dk\\h1sakura1025\\vuepress_blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\dk\\h1sakura1025\\vuepress_blog\\docs\\.vuepress\\theme\\layouts\\Tags.vue?vue&type=style&index=2&id=2607db93&lang=stylus&scoped=true&","dependencies":[{"path":"E:\\workspace\\dk\\h1sakura1025\\vuepress_blog\\docs\\.vuepress\\theme\\layouts\\Tags.vue","mtime":1598888885286},{"path":"E:\\workspace\\dk\\h1sakura1025\\vuepress_blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\dk\\h1sakura1025\\vuepress_blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\workspace\\dk\\h1sakura1025\\vuepress_blog\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\workspace\\dk\\h1sakura1025\\vuepress_blog\\node_modules\\stylus-loader\\index.js","mtime":1519606876000},{"path":"E:\\workspace\\dk\\h1sakura1025\\vuepress_blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\dk\\h1sakura1025\\vuepress_blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGFncy13cmFwcGVyCiAgbWF4LXdpZHRoOiAkY29udGVudFdpZHRoCiAgbWFyZ2luOiAwIGF1dG87CiAgcGFkZGluZzogNC42cmVtIDIuNXJlbSAwOwoKQG1lZGlhIChtYXgtd2lkdGg6ICRNUU1vYmlsZSkKICAudGFncy13cmFwcGVyCiAgICBwYWRkaW5nOiA1cmVtIDAuNnJlbSAwOwo="},{"version":3,"sources":["Tags.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Tags.vue","sourceRoot":"docs/.vuepress/theme/layouts","sourcesContent":["<template>\n  <Common  class=\"tags-wrapper\" :sidebar=\"false\" :style=\"$themeConfig.fullscreen? {\n        'max-width': '2080px',\n        'margin': '0 auto',\n        'padding': '0'\n      } : {}\">\n       <div v-if='$themeConfig.fullscreen' \n       :class=\"$themeConfig.fullscreen?'tsfullPic':''\"\n      :style=\"$themeConfig.fullscreen? {\n        'background': 'url(' + this.timestamp($themeConfig.categoryPic?$themeConfig.categoryPic:$coverRandom) +')'\n      } : {}\" >\n      </div>\n       <div :style=\"$themeConfig.fullscreen? {\n        'max-width': '860px',\n        'margin': '0 auto',\n        'padding': '4.6rem 2.5rem 0'\n      } : {}\">\n    <!-- 标签集合 -->\n    <ModuleTransition>\n      <TagList\n        v-show=\"recoShowModule\"\n        :currentTag=\"currentTag\"\n        @getCurrentTag=\"tagClick\"></TagList>\n    </ModuleTransition>\n\n    <!-- 博客列表 -->\n    <ModuleTransition delay=\"0.08\">\n      <note-abstract\n        v-show=\"recoShowModule\"\n        class=\"list\"\n        :data=\"$recoPosts\"\n        :currentPage=\"currentPage\"\n        :currentTag=\"currentTag\"\n        @currentTag=\"getCurrentTag\"></note-abstract>\n    </ModuleTransition>\n\n    <!-- 分页 -->\n    <ModuleTransition delay=\"0.16\">\n      <pagation\n        class=\"pagation\"\n        :total=\"$recoPosts.length\"\n        :currentPage=\"currentPage\"\n        @getCurrentPage=\"getCurrentPage\"></pagation>\n    </ModuleTransition>\n       </div>\n  </Common>\n</template>\n\n<script>\nimport Common from '@theme/components/Common'\nimport TagList from '@theme/components/TagList'\nimport NoteAbstract from '@theme/components/NoteAbstract'\nimport pagination from '@theme/mixins/pagination'\nimport ModuleTransition from '@theme/components/ModuleTransition'\nimport moduleTransitonMixin from '@theme/mixins/moduleTransiton'\n\nexport default {\n  mixins: [pagination, moduleTransitonMixin],\n  components: { Common, NoteAbstract, TagList, ModuleTransition },\n  data () {\n    return {\n      tags: [],\n      currentTag: '',\n      currentPage: 1,\n      allTagName: ''\n    }\n  },\n\n  created () {\n    this.currentTag = this.$recoLocales.tag.all\n    this.allTagName = this.$recoLocales.tag.all\n    if (this.$tags.list.length > 0) {\n      this.currentTag = this.$route.query.tag ? this.$route.query.tag : this.currentTag\n    }\n  },\n\n  mounted () {\n    this._setPage(this._getStoragePage())\n  },\n\n  methods: {\n//新连接\n    timestamp(url){\n      var getTimestamp=new Date().getTime();\n      if(url.indexOf(\"?\")>-1){\n        url=url+\"&timestamp=\"+getTimestamp\n      }else{\n        url=url+\"?timestamp=\"+getTimestamp\n      }\n      return url\n    },\n    tagClick (tagInfo) {\n      if (this.$route.path !== tagInfo.path) {\n        this.$router.push({ path: tagInfo.path })\n      }\n    },\n\n    getCurrentTag (tag) {\n      this.$emit('currentTag', tag)\n    },\n\n    getCurrentPage (page) {\n      this._setPage(page)\n      setTimeout(() => {\n        window.scrollTo(0, 0)\n      }, 100)\n    },\n    _setPage (page) {\n      this.currentPage = page\n      this.$page.currentPage = page\n      this._setStoragePage(page)\n    }\n  }\n}\n</script>\n<style>\n.tsfullPic {\n  margin-top: -3.6rem !important;\n  width: 100% !important;\n  height: 50vh;\n  background-position: 50% 50% !important;\n  background-size: cover !important;\n  background-repeat: no-repeat !important;\n}\n</style>\n<style src=\"../styles/theme.styl\" lang=\"stylus\"></style>\n\n<style lang=\"stylus\" scoped>\n.tags-wrapper\n  max-width: $contentWidth\n  margin: 0 auto;\n  padding: 4.6rem 2.5rem 0;\n\n@media (max-width: $MQMobile)\n  .tags-wrapper\n    padding: 5rem 0.6rem 0;\n</style>\n"]}]}