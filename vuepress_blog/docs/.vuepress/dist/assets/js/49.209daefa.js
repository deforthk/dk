(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{726:function(t,v,a){"use strict";a.r(v);var e=a(3),_=Object(e.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"反射机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射机制"}},[t._v("#")]),t._v(" 反射机制")]),t._v(" "),a("p",[t._v("所谓的反射机制就是 java 语言在运行时拥有一项自观的能力。通过这种能力可以彻底的了解自身的情 况为下一步的动作做准备。")]),t._v(" "),a("p",[t._v("Java 的反射机制的实现要借助于 4 个类：class，Constructor，Field，Method;")]),t._v(" "),a("p",[t._v("class 代表的是类对象。")]),t._v(" "),a("p",[t._v("Constructor 类的构造器对象。")]),t._v(" "),a("p",[t._v("Field 类的属性对象。")]),t._v(" "),a("p",[t._v("Method 类的方法对象。")]),t._v(" "),a("p",[t._v("通过这四个对象我们可以粗略的看到一个类的各个组成部分。")]),t._v(" "),a("h2",{attrs:{id:"java-反射的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-反射的作用"}},[t._v("#")]),t._v(" Java 反射的作用")]),t._v(" "),a("p",[t._v("在 Java 运行时环境中，对于任意一个类，可以知道这个类有哪些属性和方法。对于任意一个对象，可以调用它的任意一个方法。这种动态获取类的信息以及动态调用对象的方法的功能来自于 Java 语言的反射 （Reflection）机制。")]),t._v(" "),a("h2",{attrs:{id:"java-反射机制提供功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-反射机制提供功能"}},[t._v("#")]),t._v(" Java 反射机制提供功能")]),t._v(" "),a("p",[t._v("在运行时判断任意一个对象所属的类。")]),t._v(" "),a("p",[t._v("在运行时构造任意一个类的对象。")]),t._v(" "),a("p",[t._v("在运行时判断任意一个类所具有的成员变量和方法。")]),t._v(" "),a("p",[t._v("在运行时调用任意一个对象的方法。")]),t._v(" "),a("h2",{attrs:{id:"反射常用api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射常用api"}},[t._v("#")]),t._v(" 反射常用API")]),t._v(" "),a("ul",[a("li",[t._v("class常用API")])]),t._v(" "),a("p",[t._v("1.class.GETINTERFACES（）；获得这个类实现的接口")]),t._v(" "),a("p",[t._v("2.class.getMethods（）")]),t._v(" "),a("ul",[a("li",[t._v("Method常用API")])]),t._v(" "),a("p",[t._v("1.Method.invoke()，方法自己调用自己，方法调用必须通过object.method()方式，method对象本身是无法调用自己的")]),t._v(" "),a("p",[t._v("2.Method.getParameterTypes()获得参数类型")]),t._v(" "),a("p",[t._v("3.Method.getReturnType()获得返回值类型")]),t._v(" "),a("p",[t._v("4.Method.getParameterCount()获得方法的参数个数")]),t._v(" "),a("p",[t._v("5.Method.getName()获得方法名称")]),t._v(" "),a("p",[t._v("6.Method.getExceptionTypes()获得方法抛出哪些异常")]),t._v(" "),a("p",[t._v("7.method.getAnnotation()获得注解")]),t._v(" "),a("ul",[a("li",[t._v("Field常用反射API")])]),t._v(" "),a("p",[t._v("1.field.getAnnotations()返回属性的注解")]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[t._v("待补充 ... ...")])])}),[],!1,null,null,null);v.default=_.exports}}]);